name:                threepenny-editors
version:             0.5.2
synopsis:            Composable algebraic editors
description:         Please see Readme.md
homepage:            https://github.com/pepeiborra/threepenny-editors
license:             BSD3
author:              Jose Iborra
maintainer:          pepeiborra@gmail.com
copyright:           All Rights Reserved
category:            Web
extra-source-files:
- README.md
- CHANGELOG.md
ghc-options: -Wall -Wno-name-shadowing
description: |
    This package provides a type class 'Editable' and combinators to
    easily put together form-like editors for algebraic datatypes.
    .
    NOTE: This library contains examples, but they are not built by default.
    To build and install the example, use the @buildExamples@ flag like this
    .
    @cabal install threepenny-editors -fbuildExamples@

flags:
  buildExamples:
    description: build the examples
    default: False
    manual : True

dependencies:
    - base >= 4.7 && < 5
    - bifunctors
    - containers
    - data-default
    - generics-sop
    - lens
    - profunctors
    - threepenny-gui > 0.7
    - casing

library:
  source-dirs: 	src
  exposed-modules:
    - Graphics.UI.Threepenny.Editors
    - Graphics.UI.Threepenny.Editors.Layout
    - Graphics.UI.Threepenny.Editors.Utils
    - Graphics.UI.Threepenny.Editors.Types
    - Graphics.UI.Threepenny.Editors.Validation

executables:
  person: &example
    source-dirs:  examples
    main: Person.hs
    when:
      condition: flag(buildExamples)
      then:
        dependencies:
          - threepenny-editors
      else: 
        buildable: False

  parser:
    <<: *example
    main: Parser.hs
    when:
      condition: flag(buildExamples)
      then:
        dependencies:
          - threepenny-editors
          - haskell-src-exts
      else: 
        buildable: False

  crud:
    <<: *example
    main: CRUD.hs
    when:
      condition: flag(buildExamples)
      then:
        dependencies:
          - threepenny-editors
          - containers
      else: 
        buildable: False
